# kafka version 0.10.0.0 JMX
LoadPlugin java
<Plugin java>
    JVMArg "-verbose:jni"
    JVMArg "-Djava.class.path=/usr/share/collectd/java/collectd-api.jar:/usr/share/collectd/java/generic-jmx.jar"
    LoadPlugin "org.collectd.java.GenericJMX"
    <Plugin "GenericJMX">
        <MBean "kafka.topics.messages">
            ObjectName "kafka.server:type=BrokerTopicMetrics,name=MessagesInPerSec"
            InstancePrefix "topics"
            <Value>
                InstancePrefix "kafka.topics.messages.count"
                Type "counter"
                Table false
                Attribute "Count"
            </Value>
        </MBean>
        <MBean "kafka.topics.bytes-in">
            ObjectName "kafka.server:type=BrokerTopicMetrics,name=BytesInPerSec"
            InstancePrefix "topics"
            <Value>
                InstancePrefix "kafka.topics.bytes-in.count"
                Type "counter"
                Table false
                Attribute "Count"
            </Value>
        </MBean>
        <MBean "kafka.topics.bytes-out">
            ObjectName "kafka.server:type=BrokerTopicMetrics,name=BytesOutPerSec"
            InstancePrefix "topics"
            <Value>
                InstancePrefix "kafka.topics.bytes-out.count"
                Type "counter"
                Table false
                Attribute "Count"
            </Value>
        </MBean>
        <MBean "kafka.produce.requests">
            ObjectName "kafka.network:type=RequestMetrics,name=RequestsPerSec,request=Produce"
            InstancePrefix "produce"
            <Value>
                InstancePrefix "kafka.produce.requests.count"
                Type "counter"
                Table false
                Attribute "Count"
            </Value>
        </MBean>
        <MBean "kafka.fetch-consumer.requests">
            ObjectName "kafka.network:type=RequestMetrics,name=RequestsPerSec,request=FetchConsumer"
            InstancePrefix "fetch-consumer"
            <Value>
                InstancePrefix "kafka.fetch-consumer.requests.count"
                Type "counter"
                Table false
                Attribute "Count"
            </Value>
        </MBean>
        <MBean "kafka.fetch-follower.requests">
            ObjectName "kafka.network:type=RequestMetrics,name=RequestsPerSec,request=FetchFollower"
            InstancePrefix "fetch-follower"
            <Value>
                InstancePrefix "kafka.fetch-follower.requests.count"
                Type "counter"
                Table false
                Attribute "Count"
            </Value>
        </MBean>
        <MBean "kafka.log.flush">
            ObjectName "kafka.log:type=LogFlushStats,name=LogFlushRateAndTimeMs"
            InstancePrefix "log"
            <Value>
                Type "counter"
                Table false
                Attribute "Count"
                InstancePrefix "kafka.log.flush.count"
            </Value>
            <Value>
                Type "gauge"
                Table false
                Attribute "Mean"
                InstancePrefix "kafka.log.flush.time-ms.median"
            </Value>
            <Value>
                Type "gauge"
                Table false
                Attribute "99thPercentile"
                InstancePrefix "kafka.log.flush.time-ms.99th"
            </Value>
        </MBean>
        <MBean "kafka.controller.active">
            ObjectName "kafka.controller:type=KafkaController,name=ActiveControllerCount"
            InstancePrefix "controller"
            <Value>
                Type "gauge"
                Table false
                Attribute "Value"
                InstancePrefix "kafka.controller.active.gauge"
            </Value>
        </MBean>
        <MBean "kafka.partitions.underreplicated">
            ObjectName "kafka.server:type=ReplicaManager,name=UnderReplicatedPartitions"
            InstancePrefix "partitions"
            <Value>
                Type "gauge"
                Table false
                Attribute "Value"
                InstancePrefix "kafka.partitions.underreplicated.gauge"
            </Value>
        </MBean>
        <MBean "kafka.fetch-consumer.total-time">
            ObjectName "kafka.network:type=RequestMetrics,name=TotalTimeMs,request=FetchConsumer"
            InstancePrefix "fetch-consumer"
            <Value>
                Type "counter"
                Table false
                Attribute "Count"
                InstancePrefix "kafka.fetch-consumer.total-time.count"
            </Value>
            <Value>
                Type "gauge"
                Table false
                Attribute "50thPercentile"
                InstancePrefix "kafka.fetch-consumer.total-time.median"
            </Value>
            <Value>
                Type "gauge"
                Table false
                Attribute "99thPercentile"
                InstancePrefix "kafka.fetch-consumer.total-time.99th"
            </Value>
        </MBean>
        <MBean "kafka.fetch-follower.total-time">
            ObjectName "kafka.network:type=RequestMetrics,name=TotalTimeMs,request=FetchFollower"
            InstancePrefix "fetch-follower"
            <Value>
                Type "counter"
                Table false
                Attribute "Count"
                InstancePrefix "kafka.fetch-follower.total-time.count"
            </Value>
            <Value>
                Type "gauge"
                Table false
                Attribute "50thPercentile"
                InstancePrefix "kafka.fetch-follower.total-time.median"
            </Value>
            <Value>
                Type "gauge"
                Table false
                Attribute "99thPercentile"
                InstancePrefix "kafka.fetch-follower.total-time.99th"
            </Value>
        </MBean>
        <MBean "kafka.produce.total-time">
            ObjectName "kafka.network:type=RequestMetrics,name=TotalTimeMs,request=Produce"
            InstancePrefix "produce"
            <Value>
                Type "counter"
                Table false
                Attribute "Count"
                InstancePrefix "kafka.produce.total-time.count"
            </Value>
            <Value>
                Type "gauge"
                Table false
                Attribute "50thPercentile"
                InstancePrefix "kafka.produce.total-time.median"
            </Value>
            <Value>
                Type "gauge"
                Table false
                Attribute "99thPercentile"
                InstancePrefix "kafka.produce.total-time.99th"
            </Value>
        </MBean>
        <MBean "kafka.fetch-consumer.req-queue-time">
            ObjectName "kafka.network:type=RequestMetrics,name=RequestQueueTimeMs,request=FetchConsumer"
            InstancePrefix "fetch-cunsumer"
            <Value>
                Type "counter"
                Table false
                Attribute "Count"
                InstancePrefix "kafka.fetch-consumer.req-queue-time.count"
            </Value>
            <Value>
                Type "gauge"
                Table false
                Attribute "50thPercentile"
                InstancePrefix "kafka.fetch-consumer.req-queue-time.median"
            </Value>
            <Value>
                Type "gauge"
                Table false
                Attribute "99thPercentile"
                InstancePrefix "kafka.fetch-consumer.req-queue-time.99th"
            </Value>
        </MBean>
        <MBean "kafka.fetch-follower.req-queue-time">
            ObjectName "kafka.network:type=RequestMetrics,name=RequestQueueTimeMs,request=FetchFollower"
            InstancePrefix "fetch-follower"
            <Value>
                Type "counter"
                Table false
                Attribute "Count"
                InstancePrefix "kafka.fetch-follower.req-queue-time.count"
            </Value>
            <Value>
                Type "gauge"
                Table false
                Attribute "50thPercentile"
                InstancePrefix "kafka.fetch-follower.req-queue-time.median"
            </Value>
            <Value>
                Type "gauge"
                Table false
                Attribute "99thPercentile"
                InstancePrefix "kafka.fetch-follower.req-queue-time.99th"
            </Value>
        </MBean>
        <MBean "kafka.produce.req-queue-time">
            ObjectName "kafka.network:type=RequestMetrics,name=RequestQueueTimeMs,request=Produce"
            InstancePrefix "produce"
            <Value>
                Type "counter"
                Table false
                Attribute "Count"
                InstancePrefix "kafka.produce.req-queue-time.count"
            </Value>
            <Value>
                Type "gauge"
                Table false
                Attribute "50thPercentile"
                InstancePrefix "kafka.produce.req-queue-time.median"
            </Value>
            <Value>
                Type "gauge"
                Table false
                Attribute "99thPercentile"
                InstancePrefix "kafka.produce.req-queue-time.99th"
            </Value>
        </MBean>
        <MBean "kafka.fetch-consumer.res-queue-time">
            ObjectName "kafka.network:type=RequestMetrics,name=ResponseQueueTimeMs,request=FetchConsumer"
            InstancePrefix "fetch-cunsumer"
            <Value>
                Type "counter"
                Table false
                Attribute "Count"
                InstancePrefix "kafka.fetch-consumer.res-queue-time.count"
            </Value>
            <Value>
                Type "gauge"
                Table false
                Attribute "50thPercentile"
                InstancePrefix "kafka.fetch-consumer.res-queue-time.median"
            </Value>
            <Value>
                Type "gauge"
                Table false
                Attribute "99thPercentile"
                InstancePrefix "kafka.fetch-consumer.res-queue-time.99th"
            </Value>
        </MBean>
        <MBean "kafka.fetch-follower.res-queue-time">
            ObjectName "kafka.network:type=RequestMetrics,name=ResponseQueueTimeMs,request=FetchFollower"
            InstancePrefix "fetch-follower"
            <Value>
                Type "counter"
                Table false
                Attribute "Count"
                InstancePrefix "kafka.fetch-follower.res-queue-time.count"
            </Value>
            <Value>
                Type "gauge"
                Table false
                Attribute "50thPercentile"
                InstancePrefix "kafka.fetch-follower.res-queue-time.median"
            </Value>
            <Value>
                Type "gauge"
                Table false
                Attribute "99thPercentile"
                InstancePrefix "kafka.fetch-follower.res-queue-time.99th"
            </Value>
        </MBean>
        <MBean "kafka.produce.res-queue-time">
            ObjectName "kafka.network:type=RequestMetrics,name=ResponseQueueTimeMs,request=Produce"
            InstancePrefix "produce"
            <Value>
                Type "counter"
                Table false
                Attribute "Count"
                InstancePrefix "kafka.produce.res-queue-time.count"
            </Value>
            <Value>
                Type "gauge"
                Table false
                Attribute "50thPercentile"
                InstancePrefix "kafka.produce.res-queue-time.median"
            </Value>
            <Value>
                Type "gauge"
                Table false
                Attribute "99thPercentile"
                InstancePrefix "kafka.produce.res-queue-time.99th"
            </Value>
        </MBean>
        <Connection>
            ServiceURL "service:jmx:rmi:///jndi/rmi://localhost:{{ kafka_jmx_port }}/jmxrmi"
            Host "{{ ansible_hostname }}"
            Collect "kafka.topics.messages"
            Collect "kafka.topics.bytes-in"
            Collect "kafka.topics.bytes-out"
            Collect "kafka.produce.requests"
            Collect "kafka.fetch-consumer.requests"
            Collect "kafka.fetch-follower.requests"
            Collect "kafka.log.flush"
            Collect "kafka.controller.active"
            Collect "kafka.partitions.underreplicated"
            Collect "kafka.fetch-consumer.total-time"
            Collect "kafka.fetch-follower.total-time"
            Collect "kafka.produce.total-time"
            Collect "kafka.fetch-consumer.req-queue-time"
            Collect "kafka.fetch-follower.req-queue-time"
            Collect "kafka.produce.req-queue-time"
            Collect "kafka.fetch-consumer.res-queue-time"
            Collect "kafka.fetch-follower.res-queue-time"
            Collect "kafka.produce.res-queue-time"
        </Connection>
    </Plugin>
</Plugin>
LoadPlugin "target_replace"
<Chain "PostCache">
<Rule "strip_space">
   <Target "replace">
     PluginInstance " " "_"
     PluginInstance " " "_"
     PluginInstance " " "_"
     PluginInstance " " "_"
     PluginInstance "\"" ""
     PluginInstance "\"" ""
   </Target>
   <Target "write">
      Plugin "network"
   </Target>
</Rule>
</Chain>

# Replace plugin name from "GenericJMX" to "kafka"
PreCacheChain "PreCache"
LoadPlugin match_regex
LoadPlugin target_set
<Chain "PreCache">
    <Rule "rename_jmx">
        <Match "regex">
            Plugin "^GenericJMX$"
            TypeInstance "^kafka.*"
        </Match>
        <Target "set">
            Plugin "kafka"
        </Target>
    </Rule>
</Chain>
